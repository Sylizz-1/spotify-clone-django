# Generated by Django 5.1.6 on 2025-04-08 09:57

import apps.core.utils
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('interactions', '0002_initial'),
        ('podcasts', '0002_initial'),
        ('tracks', '0002_rename_duration_track_duration_ms_track_release_date'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subfolders', to='interactions.folder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='userfollowedplaylist',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlists', to='interactions.folder'),
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('avatar_url', models.ImageField(blank=True, null=True, upload_to=apps.core.utils.generate_unique_filename)),
                ('is_public', models.BooleanField(default=True)),
                ('likes_count', models.IntegerField(default=0)),
                ('collaborators', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='userfollowedplaylist',
            name='playlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='interactions.playlist'),
        ),
        migrations.CreateModel(
            name='PlaylistTrackPodcast',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_index', models.IntegerField()),
                ('added_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_playlist_items', to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='interactions.playlist')),
                ('podcast_ep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='in_playlists', to='podcasts.podcastepisode')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='in_playlists', to='tracks.track')),
            ],
            options={
                'verbose_name': 'Playlist Item',
                'verbose_name_plural': 'Playlist Items',
                'ordering': ['order_index'],
            },
        ),
    ]
